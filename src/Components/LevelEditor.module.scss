.directions {
    display: flex;
    flex-direction: column;
    align-items: center;

    gap: 20px;

    svg {
        width: 90px;
        height: 90px;
    }

    >* {
        display: flex;
        align-items: center;
        gap: 20px;
    }
}


.arrow {
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;

    &::after {
        content: " ";

        border: solid white;
        border-width: 0 3px 3px 0;
        display: inline-block;
        padding: 3px;
    }

    &.selected {
        box-shadow: inset 0 0 5px 5px #FFFFFF;
    }

    &.up,
    &.down {
        height: 40px;
        width: 90px;
    }

    &.right,
    &.left {
        width: 40px;
        height: 90px;
    }

    &.right::after {
        transform: rotate(-45deg);
        -webkit-transform: rotate(-45deg);
    }

    &.left::after {
        transform: rotate(135deg);
        -webkit-transform: rotate(135deg);
    }

    &.up::after {
        transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
    }

    &.down::after {
        transform: rotate(45deg);
        -webkit-transform: rotate(45deg);
    }
}

.hexagonContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 20px;

    .hexagonRow {
        display: flex;
    }

    .hexagonRow:nth-child(2) {
        //Compress the hexagon so there aren't big vertical gaps
        margin: -15px 0;
    }

    .hexagonButton {
        width: 100px;
        height: 58px;
        margin: 5px;

        //Since we're using clip-path, border doesn't work
        border: none !important;
        outline: none !important;
        font-size: 16px;
        cursor: pointer;
        position: relative;
        clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);

        &::before,
        &::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            clip-path: polygon(50% 10%, 90% 30%, 90% 70%, 50% 90%, 10% 70%, 10% 30%);
        }

        &:not(.selected)::after {
            //darken unselected 
            background-color: rgba(0, 0, 0, .50);
        }

        &.red::before {
            background-color: red;
        }

        &.orange::before {
            background-color: darkorange;
        }

        &.yellow::before {
            background-color: yellow;
        }

        &.green::before {
            background-color: lime;
        }

        &.blue::before {
            background-color: blue;
        }

        &.purple::before {
            background-color: blueviolet;
        }

        &.brown::before {
            background-color: saddlebrown;
        }
    }
}

.trainDisplay {
    display: flex;
    flex-direction: row;
    gap: 20px;

    .well {
        flex: 1;
        border-radius: 5px;
        box-shadow: inset 0 0 5px #000;

        svg {
            position: static;
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            padding: 5px;
        }
    }
}

.editor {
    > * {
        flex: 1;
    }
}